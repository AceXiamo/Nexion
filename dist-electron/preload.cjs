"use strict";const n=require("electron");n.contextBridge.exposeInMainWorld("ipcRenderer",{on(...e){const[s,o]=e;return n.ipcRenderer.on(s,(i,...r)=>o(i,...r))},off(...e){const[s,...o]=e;return n.ipcRenderer.off(s,...o)},send(...e){const[s,...o]=e;return n.ipcRenderer.send(s,...o)},invoke(...e){const[s,...o]=e;return n.ipcRenderer.invoke(s,...o)},ssh:{createSession:e=>n.ipcRenderer.invoke("ssh-create-session",e),closeSession:e=>n.ipcRenderer.invoke("ssh-close-session",e),switchSession:e=>n.ipcRenderer.invoke("ssh-switch-session",e),sendCommand:(e,s)=>n.ipcRenderer.invoke("ssh-send-command",e,s),resizeSession:(e,s,o)=>n.ipcRenderer.invoke("ssh-resize-session",e,s,o),getAllSessions:()=>n.ipcRenderer.invoke("ssh-get-all-sessions"),getActiveSession:()=>n.ipcRenderer.invoke("ssh-get-active-session"),testConnection:e=>n.ipcRenderer.invoke("ssh-test-connection",e)}});n.contextBridge.exposeInMainWorld("walletDebug",{checkWalletAvailability:()=>{const e={ethereum:typeof window.ethereum<"u",okxwallet:typeof window.okxwallet<"u",userAgent:navigator.userAgent,isElectron:typeof process<"u"&&process.type==="renderer"};return console.log("Wallet availability check:",e),e},logWalletProviders:()=>{console.log('All window properties containing "eth" or "wallet":',Object.keys(window).filter(e=>e.toLowerCase().includes("eth")||e.toLowerCase().includes("wallet")))}});
